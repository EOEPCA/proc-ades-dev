name: Ades Testing

on:
  workflow_dispatch

jobs:
  run-ades:
    runs-on: ubuntu-latest
    name: deploy and execute dNBR app to minikube

    services:
      minio:
        image: lazybit/minio
        ports:
          - 9000:9000
        env:
          MINIO_ROOT_USER: minio
          MINIO_ROOT_PASSWORD: minio123
        options: --name=minio --health-cmd "curl http://localhost:9000/minio/health/live"

    steps:
      - uses: actions/checkout@v2
      - name: Start minikube
        uses: medyagh/setup-minikube@master
      - name: Deploy Ades
        run: |
          export SHELL=/bin/bash
          kubectl create ns ades
          helm upgrade --install ades  charts/ades/ -f charts/ades/mycharts/values_minikube.yaml -n ades
          echo "=======\n ADES deployment has been launched"
      - name: Check if ades is running
        run: |
          export SHELL=/bin/bash
          sleep 15
          POD_NAME=$(kubectl get pods --namespace ades -l "app.kubernetes.io/name=ades,app.kubernetes.io/instance=ades" -o jsonpath="{.items[0].metadata.name}")
          echo "pod name is: $POD_NAME"
          n=0
          until [ "$n" -ge 10 ]; do
            STATUS="$(kubectl get pod $POD_NAME -n ades -o custom-columns=':status.phase' | tr '\n' ' ' | xargs)"
            if [ $STATUS = "Running" ]; then
              break
            fi
            echo "Pod is not running yet. Status: ${STATUS}"
            n=$((n + 1))
            sleep 20
          done
          echo "=======\n ADES status: ${STATUS}"
      - name: Portforwarding Ades on port 8080
        run: |
          export SHELL=/bin/bash
          export POD_NAME=$(kubectl get pods --namespace ades-test -l "app.kubernetes.io/name=ades,app.kubernetes.io/instance=ades" -o jsonpath="{.items[0].metadata.name}")
          kubectl --namespace ades-test port-forward $POD_NAME 8080:80 >/dev/null 2>&1 &
          echo "=======\n ADES has been forwarded on port 8080"
      - name: Checking if ades pod is ready
        run: |
          export SHELL=/bin/bash
          sleep 5
          POD_NAME=$(kubectl get pods --namespace ades-test -l "app.kubernetes.io/name=ades,app.kubernetes.io/instance=ades" -o jsonpath="{.items[0].metadata.name}")
          n=0
          until [ "$n" -ge 10 ]; do
            READY=$(kubectl get pod $POD_NAME -n ades-test -o jsonpath="{.status.containerStatuses[0].ready}")
        
            if [ "$READY" = "true" ]; then
              break
            fi
            echo "Pod is not ready yet "
            n=$((n + 1))
            sleep 20
          done
      - name: Create bucket in Minio Repos
        uses: aitorres/aws-s3-create-bucket@v1.2.0
        with:
          bucket-name: 'processingresults'
          aws-access-key-id: minio
          aws-secret-access-key: minio123
