# Default values for ades.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""


useKubeProxy: true
clusterAdminRoleName: cluster-admin


podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


redis:
  replica:
    replicaCount: 1


zoo:
  kernel:
    maincfgtpl: "files/zoo-kernel/main.cfg.tpl"
    oas: "files/zoo-kernel/oas.cfg"
    htaccess: "files/zoo-kernel/htaccess"
  openapi:
    startupsh: "files/openapi/server/startUp.sh"
  rabbitmq:
    definitions: "files/rabbitmq/definitions.json"
  services:
    cookiecutter_config: "files/zoo-services/assets/cookiecutter_config.yaml"

zoofpm:
  image:
    repository: eoepca/proc-ades
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: dev3.0.0
  autoscaling:
    enabled: false
  replicaCount: 1


zookernel:
  image:
    repository: eoepca/proc-ades
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: dev3.0.0


workflow:
  storageClass: standard
  defaultVolumeSize: 10190
  defaultMaxRam: 1024
  defaultMaxCores: 2
  calrissianImage: "terradue/calrissian:0.12.0"

  inputs:
    APP: ades
    AWS_REGION: fr-par
    AWS_ACCESS_KEY_ID: my_access_key
    AWS_SECRET_ACCESS_KEY: my_secret_access_key
    AWS_SERVICE_URL: https://s3endpoint.cloud
    ADES_STAGEOUT_OUTPUT: s3://eoepca-ades


postgresql:
  enabled: true
  primary:
    initdb:
      scriptsConfigMap: "postgresql-primary-init-scripts"

global:
  postgresql:
    auth:
      username: zoo
      password: zoo
      database: zoo

    service:
      ports:
        postgresql: "5432"

# rabbitmq
rabbitmq:
  auth:
    username: RABBITMQ_USERNAME
    password: CHANGEME
  loadDefinition:
    enabled: true
    existingSecret: load-definition
  extraConfiguration: |
    load_definitions = /app/load_definition.json


persistence:
  enabled: true
  # existingUserDataClaim:
  # existingProcServicesClaim:
  storageClass: standard
  userDataAccessMode: ReadWriteOnce
  userDataSize: 10Gi
  procServicesAccessMode: ReadWriteOnce
  procServicesSize: 5Gi
  servicesNamespacePath: /opt/zooservices_user
  procTmpAccessMode: ReadWriteMany
  procTmpSize: 5Gi
  #existingProcessingTmpClaim


cookiecutter:
  templateUrl: https://github.com/EOEPCA/proc-service-template.git