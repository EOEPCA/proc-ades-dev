# Default values for ades.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""


useKubeProxy: true
clusterAdminRoleName: cluster-admin


podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
  hosts:
    - host: ades3.develop.eoepca.org
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: ades-tls
      hosts:
        - ades3.develop.eoepca.org

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


redis:
  master:
    persistence:
      storageClass: standard
  replica:
    persistence:
      storageClass: standard
    replicaCount: 1


zoo:
  kernel:
    maincfgtpl: "files/zoo-kernel/main.cfg.tpl"
    oas: "files/zoo-kernel/oas.cfg"
    htaccess: "files/zoo-kernel/htaccess"
  openapi:
    startupsh: "files/openapi/server/startUp.sh"
  rabbitmq:
    definitions: "files/rabbitmq/definitions.json"
  services:
    deployutil_py: "files/zoo-services/services/deploy_util.py"
    deployprocess_zcfg: "files/zoo-services/services/DeployProcess.zcfg"
    deployprocess_py: "files/zoo-services/services/DeployProcess.py"
    undeployprocess_zcfg: "files/zoo-services/services/UndeployProcess.zcfg"
    undeployprocess_py: "files/zoo-services/services/UndeployProcess.py"
    cookiecutter_config: "files/zoo-services/assets/cookiecutter_config.yaml"

zoofpm:
  image:
    repository: eoepca/proc-ades
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: dev3.0.2_8
  autoscaling:
    enabled: false
  replicaCount: 1


zookernel:
  image:
    repository: eoepca/proc-ades
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: dev3.0.2_8


workflow:
  storageClass: standard
  inputs:
    APP: ades
    AWS_REGION: RegionOne
    AWS_ACCESS_KEY_ID: minio
    AWS_SECRET_ACCESS_KEY: minio123
    AWS_SERVICE_URL: http://my-minio-fs.minio.svc.cluster.local:9000
    ADES_STAGEOUT_OUTPUT: s3://processingresults


postgresql:
  enabled: true
  primary:
    persistence:
      storageClass: standard
    initdb:
      scriptsConfigMap: "postgresql-primary-init-scripts"

global:
  postgresql:
    auth:
      username: zoo
      password: zoo
      database: zoo

    service:
      ports:
        postgresql: "5432"

# rabbitmq
rabbitmq:
  persistence:
    storageClass: standard
  auth:
    username: RABBITMQ_USERNAME
    password: CHANGEME
  loadDefinition:
    enabled: true
    existingSecret: load-definition
  extraConfiguration: |
    load_definitions = /app/load_definition.json


persistence:
  enabled: true
  # existingUserDataClaim:
  # existingProcServicesClaim:
  storageClass: standard
  userDataAccessMode: ReadWriteOnce
  userDataSize: 10Gi
  procServicesAccessMode: ReadWriteOnce
  procServicesSize: 5Gi
  servicesNamespacePath: /opt/zooservices_user

cookiecutter:
  templateUrl: https://github.com/EOEPCA/proc-service-template.git