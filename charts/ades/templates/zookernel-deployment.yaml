apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ades.fullname" . }}-zookernel
  labels:
    {{- include "ades.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ades.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ades.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: init-wait-for-dependencies
          image: docker.io/wshihadeh/wait_for:latest
          command: [ "/docker-entrypoint.sh" ]
          args: [ "wait_for", "rabbitmq:{{ .Release.Name }}-rabbitmq" ]
          env:
            - name: ZOO_RABBITMQ_HOST
              value: {{ .Release.Name }}-rabbitmq
      containers:
        - env:
            - name: ZOO_REDIS_HOST
              value: redis
          image: eoepca/proc-ades:dev3.0.0
          name: zookernel
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources: {}
          volumeMounts:
            - name: ades-config
              mountPath: /usr/lib/cgi-bin/main.cfg
              subPath: maincfg
            - name: ades-config
              mountPath: /usr/lib/cgi-bin/oas.cfg
              subPath: oas
            - name: ades-config
              mountPath: /var/www/html/.htaccess
              subPath: htaccess

      restartPolicy: Always
      volumes:
        - name: ades-config
          configMap:
            name: {{ template "ades.fullname" . }}-configmap
        - name: zookernel-claim0
          persistentVolumeClaim:
            claimName: zookernel-claim0
status: {}